# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    #runs-on: ubuntu-latest
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: Amadevus/pwsh-script@v2
        id: script
        with:
          script: |
            Write-ActionDebug "Visible only when ACTIONS_STEP_DEBUG secret is set"

            # access full context objects:
            if ($github.event.repository.full_name -ne $github.repository) {
              # throwing causes the step to fail
              throw "something fishy's going on, repos don't match"
            }

            $someData = Get-MyCustomData
            # data may contain workflow command strings (e.g. '::warning::...')
            # prevent runner interpreting these
            Invoke-ActionNoCommandsBlock -GenerateToken {
              # this won't result in any workflow commands
              Write-Host $someData
              Write-ActionError "not interpreted as error"
            }
            # commands work again

            # set env:BE_AWESOME=always here and for the following steps
            Set-ActionVariable BE_AWESOME always

            # add our custom tool to PATH for the following steps:
            $toolPath = Resolve-Path ./tools/bin
            Add-ActionPath $toolPath

            # warn if it's too late for people to work in Greenwich ;)
            if ([datetime]::UtcNow.Hour -ge 22) {
              Write-ActionWarning "It's time to go to bed. Don't write code late at night! âš "
            }
